#!/bin/bash

# Written by sebastiencs on github

# You can call this script like this:
# $./volume.sh up
# $./volume.sh down
# $./volume.sh mute

INC=5%

function get_volume {
    pactl list sinks | grep "Volume: f" | awk '{print $5}' | sed 's/%//'
}

function is_mute {
    pactl list sinks | grep Mute | awk '{print $2}' | grep yes
}

function send_notification {
    volume=`get_volume`
    dunstify -i	$(dirname $0)/volume.png -r 1701 " $volume%"
}

case $1 in
  up)
    # Set the volume on (if it was muted)
    pactl set-sink-mute 0 0
    # Up the volume by INC
    if [ `get_volume` -lt  150 ] ; then
        # for SINK in `pacmd list-sinks | grep 'index:' | cut -b12-`
        for SINK in `pacmd list-sinks | grep "name: " | cut -d '<' -f 2 | cut -d '>' -f 1`
        do
      # printf "%s\n" $SINK
      if [ $SINK == `pacmd stat | grep 'Default sink name: ' | cut -d ' ' -f 4` ] ; then
          pactl set-sink-volume $SINK +$INC
      fi
        done
    fi
    send_notification
    ;;
  down)
    pactl set-sink-mute 0 0
    for SINK in `pacmd list-sinks | grep 'index:' | cut -b12-`
    do
    pactl set-sink-volume $SINK -$INC
    done
    send_notification
    ;;
  mute)
  # Toggle mute
    if is_mute ; then
        pactl set-sink-mute 0 0
        send_notification
    else
        pactl set-sink-mute 0 1
        dunstify -i $(dirname $0)/volume.png -r 1701 -u normal "Mute"
    fi
esac
