* new new new new steps
- this one trumps them all. it uses wireguard which is much much easier to use, works super nicely with systemd, and doesn't get fucked up when I hibernate, suspend, or lose network connection
- go [[https://account.protonvpn.com/downloads][here]] and create a new wireguard configuration file. protonvpn does it for you
  - it uses private and public keys that protonvpn generates for you, they are stored directly in the generated config file
  - note: protonvpn saves the configuration files so you can always go back and download one that you have previously generated on that same page
  - note: they keys do expire, so be mindful of that. you may have to create a new one after a year or so which is super easy
- save the config file (we'll call it wg_conf.conf, but it will be different) to `/etc/wireguard`
- install `wireguard-tools`
- that's it. now you can start it with `sudo wg-quick up wg_conf` (omit the .conf) and stop it with `sudo wg-quick down wg_conf`
- there is also a way to interface with it using `nmcli`, but I didn't look into it because systemd is good enough
- it also interfaces super nice with systemd by default. you can enable it using `sudo systemctl start wg_conf`
* new new new steps
- I created a small rust project (uncomplete) to manage my protonvpn connections.
- after downloading a bunch .ovpn files from [[https://account.protonvpn.com/downloads][here]], place them in a directory, and point the project at that directoy, it will query protonvpn api, and find the fastest server of the ones you have downloaded, and connect to that server using openvpn
- It actually works pretty good, but more work needs to be done before it can be used in production
* new new steps
- does not use protonvpn client. protonvpn .ovpn files need to be manually added to NetworkManager
- download ovpn files to a dir from [[https://account.protonvpn.com/downloads][here]]
- grab username and password from [[https://account.protonvpn.com/account][here]]
- for each:
  - `nmcli connection import type openvpn file <fname>.ovpn`
  - each can be seen via `nmcli con show`
  - manually edit `/etc/NetworkManager/system-connections/<fname>.nmconnection`
    - under `[vpn]`
      - overwrite `password-flags=0`. causes it to not prompt for password
      - add `user-name=<username>`
    - append
    #+BEGIN_SRC
    [vpn-secrets]
    password=<password>
    #+END_SRC
- you may need to restart `NetworkManager` and/or `systemd-sysctl`
- now you can start/stop via `nmcli con up <con-name>`
- todo: systray
- todo: choose fastest
- todo: write script to import all
- todo: autoconnect
* new steps
- written 01/24
- xps 15 9530
- check out the [[https://wiki.archlinux.org/title/ProtonVPN][arch protonvpn page]]. it has lots of useful stuff. not all used here
- install `openvpn`
- grab credentials
  - from [[https://account.protonvpn.com/account][here]]
  - looking for openvpn/ikev2 username and password
  - you will use these for any protonvpn credentials
- grab vpn files
  - from [[https://account.protonvpn.com/downloads][here]] scroll down
  - find a button that says something like 'download all configurations'
  - unzip that at `/etc/openvpn/client/`
- test connection
  - you can now test this by typing `sudo openvpn /etc/openvpn/client/<configuration_name>`
  - make sure when it prompts you, you enter the username and password that we got in previous step
  - test it with 'where is my ip' search
  - this may be all you need. you can save the authinfo and create a systemd start script to connect to a specific server
    - although I would like to automatically connect to the fastest server, so I will do the following
- install `protonvpn-cli-community`
  - if you want to try out some of the other ones, go for it, but I couldn't get any of them to work. didn't try very hard
  - hopefully this works, I get the feeling that this will shit out eventually. you may have to troubleshoot
- test connection
  - `sudo protonvpn init`
    - follow the prompts. if it asks what plan you have, I just said the highest one. not sure if it matters or not
    - type credentials
    - they save somewhere automatically
  - `sudo protonvpn connect`
    - follow prompts
  - test it with `what is my ip` search
- I added `sudo protonvpn -c -f` as a bash alias, which connects to the fastest server with no user input
- auto start:
  - add this to `~/.config/systemd/user/auto-protonvpn.service`
    #+BEGIN_SRC
    [Unit]
    Description=ProtonVPN Connection
    After=network-online.target
    BindsTo=network-online.target

    [Service]
    Type=oneshot
    ExecStart=sudo /usr/bin/protonvpn disconnect ; sudo /usr/bin/protonvpn connect -f
    ExecStop=sudo /usr/bin/protonvpn disconnect
    ExecReload=sudo /usr/bin/protonvpn-cli reconnect
    RemainAfterExit=yes
    Restart=on-failure
    RestartSec=2

    [Install]
    WantedBy=default.target
    #+END_SRC
    - make the network-online target available to the user with
      - `systemctl --user link /usr/lib/systemd/system/network-online.target`
    - note: this is a user service
    - start and enable with (NOT SUDO) `systemctl --user enable --now auto-protonvpn.service`
    - should work on boot
* old steps
- created sometime in 2022
- note that I didn't change a thing about this when I added it to the old steps tab
** contains info on how to configure and autostart protonvpn on startup with openvpn
- works for xps 15 9510
** helpful link [[https://wiki.archlinux.org/title/ProtonVPN][here]]
- note that my implementation differs from the above link. read on for what worked for me
** my steps
*** download all protonvpn server configs by running
- yay -S openvpn-protonvpn
- installs all of the protonvpn server configs to /etc/openvpn/client/
*** save your username and password in a file called /etc/openvpn/auth
- username and password are found at https://account.protonvpn.com/account
  - OpenVPN/IKEv2 username section
- username on line 1, password on line 2. that's it
- according to the top of any .ovpn file in /etc/openvpn/auth if you append +f1+f2+nr to the end of your username, it will add some useful security things. only works for pro users.
*** be sure to enable NetworkManager. Protonvpn requires NetworkManager to run at all
*** necessary steps:
- run yay -S openvpn-update-systemd-resolved
  - this will create a config file in /usr/bin/update-systemd-resolved
- run cp /usr/bin/update-systemd-resolved /etc/openvpn/update-resolv-conf
  - this file is referenced in all of the client config files
*** run ln -sf /lib/systemd/system/systemd-resolved.service /etc/systemd/system/dbus-org.freedesktop.resolve1.service
- I don't remember what told me to do this, but I was getting an error until I did this. not sure if necessary
** usage
- openvpn --config /etc/openvpn/client/protonvpn.node-us-46.udp.conf --auth-user-pass /etc/openvpn/auth
  - this will start the vpn connected to some server in ny. you may change the server file
** systemd autostart
- create a file called /usr/lib/systemd/system/openvpn_marc_defined.service
- contents
#+BEGIN_SRC
    [Unit]
    Description=OpenVPN service
    After=syslog.target network-online.target
    Wants=network-online.target
    Documentation=man:openvpn(8)
    Documentation=https://community.openvpn.net/openvpn/wiki/Openvpn24ManPage
    Documentation=https://community.openvpn.net/openvpn/wiki/HOWTO

    [Service]
    Type=notify
    PrivateTmp=true
    WorkingDirectory=/etc/openvpn/server
    ExecStart=/bin/openvpn --config /etc/openvpn/client/protonvpn.node-us-46.udp.conf --auth-user-pass /etc/openvpn/auth
    CapabilityBoundingSet=CAP_IPC_LOCK CAP_NET_ADMIN CAP_NET_BIND_SERVICE CAP_NET_RAW CAP_SETGID CAP_SETUID CAP_SYS_CHROOT CAP_DAC_OVERRIDE CAP_AUDIT_WRITE
    LimitNPROC=10
    DeviceAllow=/dev/null rw
    DeviceAllow=/dev/net/tun rw
    ProtectSystem=true
    ProtectHome=true
    KillMode=process
    RestartSec=5s
    Restart=on-failure

    [Install]
    WantedBy=multi-user.target
#+END_SRC
- run systemd daemon-reload
- enable it

** it is possible that there is more to do. look at the above link and follow error messages. shouldn't be that hard
